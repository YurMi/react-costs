import './diagram-style.css'export default function Diagram(props) {	const {costs} = props;	const monthArr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',];	//Math. total Price for each Month	let arrMonthPriceTotal = [0]	for (let i = 0; i < costs.length; i++) {		const month = costs[i].date.getMonth();		if (!arrMonthPriceTotal[month]) {			arrMonthPriceTotal[month] = 0;		}		arrMonthPriceTotal[month] += Number(costs[i].price)	}	//Max Total value by Month	const maxCostValueByYear = Math.max(...arrMonthPriceTotal.filter(el => typeof el == "number"));	const displayDiagramData = (el, inx) => {		const isThisMonthHaseCosts = costs.filter(costEl => costEl.date.getMonth() === inx)		if (isThisMonthHaseCosts) {			const maxCostsValueByMonth = isThisMonthHaseCosts.reduce((acc, el) => acc + Number(el.price), 0)			const percent = (maxCostsValueByMonth / maxCostValueByYear) * 100;			if (percent > 0 && percent < 10) {				return (<p className='diagram__data' style={{'--dataValue': `${10}%`}}></p>)			} else {				return (<p className='diagram__data' style={{'--dataValue': `${percent}%`}}></p>)			}		} else {			return (<p className='diagram__data' style={{'--dataValue': '0%'}}></p>)		}	}	return (		<div className='diagram'>			<ul className='diagram__list'>				{monthArr.map((el, inx) => (						<li key={el}>							{displayDiagramData(el, inx)}							<p className='diagram__label'>{el}</p>						</li>					)				)}			</ul>			<div className="diagram_max_value_wrapper">				<h3 className='diagram_max_value'>Max Costs by Month: {maxCostValueByYear}</h3>			</div>		</div>	)}